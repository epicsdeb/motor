#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


record(motor, "$(P)$(M)") {
  field(DESC, "$(DESC)")
  field(DTYP, "$(DTYP)")
  field(DIR, "$(DIR)")
  field(VELO, "$(VELO)")
  field(VBAS, "$(VBAS)")
  field(ACCL, "$(ACCL)")
  field(BDST, "$(BDST)")
  field(BVEL, "$(BVEL)")
  field(BACC, "$(BACC)")
  field(OUT, "@asyn($(PORT),$(ADDR))")
  field(MRES, "$(MRES)")
  field(PREC, "$(PREC)")
  field(EGU, "$(EGU)")
  field(DHLM, "$(DHLM)")
  field(DLLM, "$(DLLM)")
  field(INIT, "$(INIT)")
  field(RTRY, "$(RTRY=10)")
  field(TWV, "1")
  field(SDIS, "$(P)$(M)_able.VAL")
}

record(bo, "$(P)$(M)_able") {
  field(DESC, "motor enable")
  field(PINI, "YES")
  field(OUT, "$(P)$(M).DISP")
  field(ZNAM, "Enable")
  field(ONAM, "Disable")
}

record(calcout, "$(P)$(M)_vCh") {
  field(DESC, "change velocity")
  field(CALC, "min(max(a*b,c),d)")
  field(INPB, "$(P)$(M).S")
  field(INPC, "$(P)$(M).SBAS")
  field(INPD, "$(P)$(M).SMAX")
  field(OUT, "$(P)$(M).S")
}

record(calcout, "$(P)$(M)_twCh") {
  field(DESC, "change TWV")
  field(CALC, "min(max(a*b,c),d-e)")
  field(INPB, "$(P)$(M).TWV")
  field(INPC, "$(P)$(M).MRES")
  field(INPD, "$(P)$(M).HLM")
  field(INPE, "$(P)$(M).LLM")
  field(OUT, "$(P)$(M).TWV")
}

# These records make the motor resolution, offset and direction available to the driver
# which is needed for profile moves and other applications

# Motor direction for this axis
record(longout,"$(P)$(M)Direction") {
    field(DESC, "$(M) direction")
    field(DOL,  "$(P)$(M).DIR CP MS")
    field(OMSL, "closed_loop")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR))MOTOR_REC_DIRECTION")
}


# Motor offset for this axis
record(ao,"$(P)$(M)Offset") {
    field(DESC, "$(M) offset")
    field(DOL,  "$(P)$(M).OFF CP MS")
    field(OMSL, "closed_loop")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR))MOTOR_REC_OFFSET")
    field(PREC, "$(PREC)")
}


# Motor resolution for this axis
record(ao,"$(P)$(M)Resolution") {
    field(DESC, "$(M) resolution")
    field(DOL,  "$(P)$(M).MRES CP MS")
    field(OMSL, "closed_loop")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR))MOTOR_REC_RESOLUTION")
    field(PREC, "$(PREC)")
}

#! Further lines contain data used by VisualDCT
#! View(405,484,0.9)
#! Record("$(P)$(M)",840,675,0,0,"$(P)$(M)")
#! Field("$(P)$(M).DISP",16777215,1,"$(P)$(M).DISP")
#! Field("$(P)$(M).S",16777215,0,"$(P)$(M).S")
#! Field("$(P)$(M).SBAS",16777215,0,"$(P)$(M).SBAS")
#! Field("$(P)$(M).SMAX",16777215,0,"$(P)$(M).SMAX")
#! Field("$(P)$(M).TWV",16777215,0,"$(P)$(M).TWV")
#! Field("$(P)$(M).MRES",16777215,0,"$(P)$(M).MRES")
#! Field("$(P)$(M).HLM",16777215,0,"$(P)$(M).HLM")
#! Field("$(P)$(M).LLM",16777215,0,"$(P)$(M).LLM")
#! Field("$(P)$(M).SDIS",16777215,1,"$(P)$(M).SDIS")
#! Link("$(P)$(M).SDIS","$(P)$(M)_able.VAL")
#! Record("$(P)$(M)_able",1120,874,0,0,"$(P)$(M)_able")
#! Field("$(P)$(M)_able.OUT",16777215,0,"$(P)$(M)_able.OUT")
#! Link("$(P)$(M)_able.OUT","$(P)$(M).DISP")
#! Field("$(P)$(M)_able.VAL",16777215,0,"$(P)$(M)_able.VAL")
#! Record("$(P)$(M)_vCh",440,699,0,0,"$(P)$(M)_vCh")
#! Field("$(P)$(M)_vCh.OUT",16777215,1,"$(P)$(M)_vCh.OUT")
#! Link("$(P)$(M)_vCh.OUT","$(P)$(M).S")
#! Field("$(P)$(M)_vCh.INPB",16777215,1,"$(P)$(M)_vCh.INPB")
#! Link("$(P)$(M)_vCh.INPB","$(P)$(M).S")
#! Field("$(P)$(M)_vCh.INPC",16777215,1,"$(P)$(M)_vCh.INPC")
#! Link("$(P)$(M)_vCh.INPC","$(P)$(M).SBAS")
#! Field("$(P)$(M)_vCh.INPD",16777215,1,"$(P)$(M)_vCh.INPD")
#! Link("$(P)$(M)_vCh.INPD","$(P)$(M).SMAX")
#! Record("$(P)$(M)_twCh",440,925,0,0,"$(P)$(M)_twCh")
#! Field("$(P)$(M)_twCh.OUT",16777215,1,"$(P)$(M)_twCh.OUT")
#! Link("$(P)$(M)_twCh.OUT","$(P)$(M).TWV")
#! Field("$(P)$(M)_twCh.INPB",16777215,1,"$(P)$(M)_twCh.INPB")
#! Link("$(P)$(M)_twCh.INPB","$(P)$(M).TWV")
#! Field("$(P)$(M)_twCh.INPC",16777215,1,"$(P)$(M)_twCh.INPC")
#! Link("$(P)$(M)_twCh.INPC","$(P)$(M).MRES")
#! Field("$(P)$(M)_twCh.INPD",16777215,1,"$(P)$(M)_twCh.INPD")
#! Link("$(P)$(M)_twCh.INPD","$(P)$(M).HLM")
#! Field("$(P)$(M)_twCh.INPE",16777215,1,"$(P)$(M)_twCh.INPE")
#! Link("$(P)$(M)_twCh.INPE","$(P)$(M).LLM")
